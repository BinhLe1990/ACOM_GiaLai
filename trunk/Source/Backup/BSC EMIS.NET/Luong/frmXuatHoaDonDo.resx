<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACS
        DQAAAk1TRnQBSQFMAgEBBQEAARgBAQEYAQEBEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wIAD4YxAAEJDbQBhjEA
        AQkBtAL/A/QFGQK0AYYxAAEJAbQB/wEZAd0GCQEZArQBhjEAAQkBtAP/A/QEGQK0AYYxAAEJAboE/wP0
        AxkBtAG6AYYxAAIJAf8B8QIZBQkBGQG0AbsBhjEAAgkF/wP0AhkBtAG7AYYxAAIJCv8BtAEJAYYxAAcZ
        BwkBhjEADhkBhjEAAxkD7wIHAbwB8AHxAewCGQGGMQADGQPvAgcBvAHsAfEB7AIZAYYxAAG1AhkD7wIH
        AbwB7AHxAewCGQGGMQAB9AKGA+8CBwG8AewB8QHsAoYB/zQACew3AAH/AQcCswKtAewB8gsAAa0BzQEJ
        Af8KAAH/AfAB9AL/AbwBtAHzAf8FAAH/AfQB9wFmAl8BZgHrAQcB9AH/BQABvAHUAdwBCQIZAQkB3AHU
        Aa4B/wkAAa0EzQGtARkFAAH/AQcD6wH3Aa4BvAHzAQcB8AH/AwAB/wHvAWUFpwGGAWUBbQHxAf8DAAEJ
        AdsD3AIJA9wB2wGLAf8GAAFEAQABrAbNASMCAAH/Ae8B7AIHAusBrgICAdUB1gHyAbwB/wEAAf8BkgGG
        AacBhgOnA6YBhgESAfEB/wEAAfIB1QTcAg0E3AHVAa4GAAFEAQABrAbNASMCAAHsArwCBwLrAREBbAEo
        AZkBXgHWAfMBBwEAAfABhgKnAa0BhgJlAoYCpgGGAW0B9AEAAdQC2wPcAg0D3ALbAdQB8gUAAUQBAAGt
        Ac4FzQEjAgABvAHwA7wD6wEVARIBuwG8AZEBvAH0Af8BpgKGAa0BrgH/AwABtQGGAqYBZQEHAfMB1QPb
        AtwCDQLcA9sB1QHsBAABRgFFAQABrQPOA80BRAIAAfIB8QLwAbwC6wHsAe0C6gHsAesB8gHzAfEBrQGG
        Aa0BZgH/AQAB/wH0Af8BAAGRAYYBpgGGAesBuwHVA9sC3AJmAtwD2wHVAa0BAAG9AxYBRgEAAbQBSwHU
        As4CzQFEAgAB8wH/AfQB8gHwAusB7AHtAvcB7AHrAfMB/wGRAa0ChgHxAQAB/wFJAQIB7QH/AQABhgKm
        AWYBswLVAWYIbAFmAdUB2wGtAQACvQGUARYBRgEABNUCzgHNAUsCAAHwA/8C7AG8Ae8B7AH3Ae8BBwHr
        Af8BAAFmAc8BrQFlAfMBAAFPAi0BAgH0AQABZQKmAV8BswHbAQkKrgEJAdsBswQAAW8BSwEABdUB1AHN
        AUsCAAHsAusB7AG8AfIB9wHtAfcB7QH3AQcB7AIAAWYBtAHPAWUB8gH/AU8BmAGXAUkB/wEAAWUCpgFl
        AdwGCQKuBgkBswUAAUsBAAbVAc4BSwIAAQcB7wHsAQcB9wLvAfcB7QHsAe8C7AIAArQBzwGGAQcC7QJP
        Af8BAAH/AqYBhgFmAfQGCQKRBgkBBwUAAUsBAALWBNUBzgFLAwAC/wHtAvcC7wH3Ae0B7wHsAfQCAAHz
        AbUCtAFmAc8B6gH0AwABvAGtAYsBzwH3AQAB1QUJAu0FCQHVAf8FAAFLAQAD1gTVAUwEAAL/AfMB6wPv
        AfIBvAEHBAABhgK0Ac8BtAFmAfQCAAH/AWUCzwGGAfQBAAHzAdwEGQL3BBkB3AG8BgABSwEAAQkC3ALW
        AtUBUgQAAfQB8QHzAfQC7AGSAesB8AUAAfMBtQK0Ac8BZQHyAwAB/wGGAc8BBwH/AgABGQEJCBkCCQcA
        AUsCAAFmAbQB3ALWAdUBUgQAAf8BBwHzAd0BtQkAAfQBhgO0AWUBvAQAAf8BBwH/BAAB8wHVBhkB1QHy
        CAABSwYAAWwB2wFSBgAB8AH/AbUIAAH/AYYECQGGAbwNAAH0AdwCswG7AfMKAApSBwAB/wG0CwAB9APz
        Af8CAAH/BQABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/wEAAYAHAAGABwABgAcA
        AYAHAAGABwABgAcAAYAHAAGABwABgAcAAYAHAAGABwABgAcAAYAHAAGABwABgAcAAfABBwYAAfABDwH+
        AR8B+AEDAeABAwHgAQMB/gEDAeABAQHAAQEBwAEBAfgBAQGAAQABgAEAAYABAQH4AQEBgAEAAYABAAGA
        AQAB+AEBAYABAAEBAcACAAHwAQEBgAEAAQIBIAIAAYABAQGAAQABBAEQAgABgAEBAYABAQEEARACAAHw
        AQEBgAEDAQABEAIAAfgBAQGAAQMBAAEgAgAB+AEBAcABAwEAAeABgAEAAfgBAQHgAQcBgAHAAYABAQH4
        AQEB4AEPAYAB4AHAAQMB+AEBAeAB/wGAAfEB4AEHAfgBAQH4Af8BAAH/AfgBHwH4AQEB/AH/AeAB3ws=
</value>
  </data>
</root>